<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 启动注解驱动的spring MVC功能，注册请求url和注解POJO类方法的映射 -->
    <mvc:annotation-driven />

    <context:component-scan base-package="org.hld.invoice" />
    <context:property-placeholder location="classpath:*.properties" file-encoding="UTF-8" />

    <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />       <!-- 前缀 -->
        <property name="suffix" value=".jsp" />         <!-- 后缀 -->
    </bean>

    <!-- 这里是对静态资源的映射 -->
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/"/>
    <mvc:resources mapping="/*.html" location="/WEB-INF/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/"/>
    <mvc:resources mapping="/vendors/**" location="/WEB-INF/vendors/"/>
    <mvc:resources mapping="/build/**" location="/WEB-INF/build/"/>
    <mvc:resources mapping="/images/**" location="/WEB-INF/images/"/>
    <!--<mvc:resources mapping="/error/**" location="/WEB-INF/error/"/>-->

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.html"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/vendors/**"/>
            <bean id="SessionInterceptor" class="org.hld.invoice.common.session.SessionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

   <!-- <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>-->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- ***************************************配置spring*************************************** -->
    <!-- 自动扫描 -->
    <context:component-scan base-package="org.hld.invoice">
        <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!-- ***************************************配置hibernate*************************************** -->
    <!-- 扫描配置文件（这里指向的是config.properties）-->
    <context:property-placeholder location="classpath:/config.properties" />

    <!-- 配置数据源 -->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  &lt;!&ndash; 数据库连接驱动 &ndash;&gt;
        <property name="jdbcUrl" value="${jdbc.url}" />         &lt;!&ndash; 数据库地址 &ndash;&gt;
        <property name="user" value="${jdbc.username}" />       &lt;!&ndash; 用户名 &ndash;&gt;
        <property name="password" value="${jdbc.password}" />   &lt;!&ndash; 密码 &ndash;&gt;
        <property name="maxPoolSize" value="40" />              &lt;!&ndash; 最大连接数 &ndash;&gt;
        <property name="minPoolSize" value="1" />               &lt;!&ndash; 最小连接数 &ndash;&gt;
        <property name="initialPoolSize" value="10" />          &lt;!&ndash; 初始化连接池内的数据库连接 &ndash;&gt;
        <property name="maxIdleTime" value="20" />              &lt;!&ndash; 最大空闲时间 &ndash;&gt;
    </bean>-->

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- Connection Pooling Info -->
        <!-- <property name="maxActive" value="${dbcp.maxActive}" /> -->
        <property name="maxIdle" value="20" />
        <property name="defaultAutoCommit" value="false" />
        <!-- 连接Idle一个小时后超时 -->
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <property name="minEvictableIdleTimeMillis" value="3600000" />

    </bean>

    <!-- 配置session工厂 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedPackages" value="org.hld.invoice.entity"/>
        <property name="packagesToScan">
            <list>
                <value>org.hld.invoice.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <!-- hibernate根据实体自动生成数据库表 -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!-- 指定数据库方言 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!-- 在控制台显示执行的数据库操作语句 -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- 在控制台显示执行的数据库操作语句（格式） -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

    <!-- 操作异常转化为Spring的表达方式 -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- 事物管理器配置 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
</beans>